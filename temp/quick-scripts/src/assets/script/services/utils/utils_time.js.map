{"version":3,"sources":["assets/script/services/utils/utils_time.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import * as _G from '../../system/all_modules';\nconst { $ } = _G;\nimport { _ } from './utils_common'; // special case for sub-modules\n\nlet timerUuidIndex = 1e5; // uuid to set as names of objects => help identifying objects\nexport default {\n\n\n   // get current time UTC - milliseconds from 1970 to now\n   getMsPassedUTC() {\n      return (new Date()).getTime();\n   },\n\n   // get current Pacific Time (PT)  - milliseconds from 1970 to now\n   // * Warning: Dont use result (finalPassedMs) to convert back to Date() object - new Date(getMsPassedPT), will results in wrong time\n   getMsPassedPT() {\n      const pacificTimeOffset = this.getPacificTimeOffset();\n      const msPassedInPTNow = this.getMsPassedUTC() + pacificTimeOffset * 60 * 60 * 1000;\n      return msPassedInPTNow;\n   },\n\n\n   getTimePT(dateObj = new Date()) {\n      const pacificTimeOffset = this.getPacificTimeOffset(dateObj);\n      const utcHour = dateObj.getHours() + dateObj.getTimezoneOffset() / 60;\n      dateObj.setHours(utcHour + pacificTimeOffset);\n      // _.log(`dateObj = ${dateObj} // pacificTimeOffset=${pacificTimeOffset} // dateObj.getTimezoneOffset()=${dateObj.getTimezoneOffset()} // utcHour=${utcHour} // utcHour + pacificTimeOffset=${utcHour + pacificTimeOffset}  `)\n      return dateObj;\n   },\n\n\n   isSameDate(dateObj1: Date, dateObj2: Date) {\n      return dateObj1.getFullYear() == dateObj2.getFullYear()\n         && dateObj1.getMonth() == dateObj2.getMonth()\n         && dateObj1.getDate() == dateObj2.getDate();\n   },\n\n\n   // get total ms to midnight of current day in PT\n   getTotalMsToMidnightPT() {\n      const msOf1Day = 24 * 60 * 60 * 1000;\n      const nowPT = this.getMsPassedPT();\n      const msToMidNight = msOf1Day - (nowPT % msOf1Day);\n      return msToMidNight;\n   },\n\n\n   // get Daylight Saving Time start & end of current year\n   // * Since 2007 DST begins on the second sunday of March,\n   // * and ends on the first sunday of November.\n   getDSTStartEndDate(dateObj?: Date) {\n      const currentDate = dateObj || new Date();\n      const currentYear = currentDate.getFullYear();\n\n      // DST Start\n      const firstOfMarch = new Date(currentYear, 2, 1);\n      const daysUntilFirstSundayInMarch = (7 - firstOfMarch.getDay()) % 7;\n      const secondSundayInMarch = firstOfMarch.getDate() + daysUntilFirstSundayInMarch + 7;\n      const dstStartDate = new Date(currentYear, 2, secondSundayInMarch);\n\n      // DST End\n      const firstOfNovember = new Date(currentYear, 10, 1);\n      const daysUntilFirstSundayInNov = (7 - firstOfNovember.getDay()) % 7;\n      const firstSundayInNovember = firstOfNovember.getDate() + daysUntilFirstSundayInNov;\n      const dstEndDate = new Date(currentYear, 10, firstSundayInNovember);\n      return [dstStartDate, dstEndDate];\n   },\n\n\n   getPacificTimeOffset(paramDate?: Date) {\n      const dateObj = paramDate || new Date();\n      const [startDST, endDST] = this.getDSTStartEndDate();\n      const isDSTActive = dateObj > startDST && dateObj < endDST;\n      const pacificTimeOffset = isDSTActive ? -7 : -8;\n      return pacificTimeOffset;\n   },\n\n\n\n   //==================================\n\n   // overwrite default setTimeout to use schedule - which is paused when user switch to another tab. This will make all animation synced since ccAction is scheduling-base\n   setTimeout(callback: Function, timeInMillisecond: number = 0) {\n      const target = { _id: timerUuidIndex++, __instanceId: timerUuidIndex, callback: null };\n      target.callback = () => { callback(target); }\n      cc.director.getScheduler().schedule(target.callback, target, timeInMillisecond / 1000, 0, 0, false);\n      return target;\n   },\n\n   clearTimeout(target: any) {\n      if (!target || !target._id || !target.callback) return;\n      cc.director.getScheduler().unschedule(target.callback, target);\n   },\n\n\n   // overwrite default setInterval to use schedule - which is paused when user switch to another tab. This will make all animation synced since ccAction is scheduling-base\n   setInterval(callback: Function, timeInMillisecond = 0) {\n      const target = { _id: timerUuidIndex++, __instanceId: timerUuidIndex, callback: null };\n      target.callback = () => { callback(target); }\n      cc.director.getScheduler().schedule(target.callback, target, timeInMillisecond / 1000, cc.macro.REPEAT_FOREVER, 0, false);\n      return target;\n   },\n\n   clearInterval(target: any) {\n      if (!target || !target._id || !target.callback) return;\n      cc.director.getScheduler().unschedule(target.callback, target);\n   },\n\n   addPseudoUpdateFunc(f) {\n      let lastime = this.getMsPassedUTC();\n      const intervalVar = this.setInterval(() => {\n         const timeNow = this.getMsPassedUTC();\n         const dt = timeNow - lastime;\n         lastime = timeNow;\n         f(dt);\n      }, 0.01);\n      return intervalVar;\n   },\n\n   // 1d \n   // 01:11:01\n   secondsToTimeCountdown(secondsCount = 0) {\n      if (secondsCount <= 0) return '0:00';\n\n      let days = Math.floor(secondsCount / 86400);\n      let hours = Math.floor((secondsCount % 86400) / 3600);\n      let minutes = Math.floor((secondsCount % 3600) / 60);\n      let seconds = secondsCount % 60;\n\n      // Output like \"1 day\" or \"1:01\" or \"4:03:59\"\n      if (days > 2) return days + ' days';\n      if (days == 1) return '1 day';\n\n      let ret = \"\";\n      //   if (hours >= 10) ret = hours + ':';\n      //   else if (hours > 0) ret = '0' + hours + ':';\n      if (hours > 0) ret = hours + ':';\n\n      // if (minutes >= 10) ret += minutes + ':';\n      // else ret += '0' + minutes + ':';\n      ret += minutes + ':';\n\n      if (seconds >= 10) ret += seconds;\n      else ret += '0' + seconds;\n\n      return ret;\n   },\n\n\n   //--- wait for certain property of certain object to be true & call a callback\n   waitToRun(\n      callback: Function,\n      propertyName: string,\n      mainObject: any = window,\n      interval: number = 0.1,\n      maxTimeWait?: number,\n      timeoutCallback?: Function\n   ) {\n      let isRunSuccess = false;\n      const isReversed = propertyName.startsWith('!');\n      const isFunction = propertyName.endsWith('()');\n      propertyName = propertyName.replace('!', '').replace('()', '');\n      const func = isFunction ? (() => mainObject[propertyName]()) : null;\n      let waitInterval;\n\n      const timeTickFunc = () => {\n         if (!isReversed) {\n            if (isFunction) { if (!func()) return; }\n            else if (!mainObject[propertyName]) return;\n         }\n         else {\n            if (isFunction) { if (func()) return; }\n            else if (mainObject[propertyName]) return;\n         }\n\n         clearInterval(waitInterval);\n         isRunSuccess = true;\n         callback(mainObject[propertyName]);\n         return true;\n      };\n\n      if (timeTickFunc()) return waitInterval;\n      waitInterval = setInterval(timeTickFunc, interval * 1000);\n\n      if (maxTimeWait) {\n         this.setTimeout(() => {\n            clearInterval(waitInterval);\n            if (timeoutCallback && !isRunSuccess) timeoutCallback();\n         }, maxTimeWait * 1000);\n      }\n\n      return waitInterval;\n   },\n\n}"]}
{"version":3,"sources":["assets/script/services/video.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import * as _G from '../system/all_modules';\nconst _ = _G._;\n\nexport const video = {\n   isAvailable: false,\n   loadingVideo: false,\n   rewardedVideo: null,\n\n   init() {\n      if (!window['FBInstant']) this.isAvailable = true;\n      this.isAvailable = _G.utilsFB.isSupportedAPI(\"getRewardedVideoAsync\");\n      _.log(`VIDEO.isAvailable = ${this.isAvailable} `);\n\n      this.preloadVideo();\n   },\n\n\n   preloadVideo() {\n      _.log(`preloadVideo called........  this.loadingVideo=${this.loadingVideo}`);\n\n      const failFunc = (code) => _.log(`preloadVideo 000 code = ${code}`);\n      if (!window['FBInstant']) return failFunc('OFFLINE');\n      if (!_G.utilsFB.isSupportedAPI(\"getRewardedVideoAsync\")) return failFunc('NOT_SUPPORTED');\n      if (this.loadingVideo) return failFunc('LOADING');\n      _.log(`preloadVideo 1111 `);\n\n      const failFunc1 = (err) => {\n         _.log(`preloadVideo >> failFunc1 called err = `, err);\n         this.rewardedVideo = null;\n         this.loadingVideo = false;\n         _.setTimeout((err) => {\n            if (!err || err.code == 'OFFLINE' || err.code == 'LOADING' || err.code == 'NOT_SUPPORTED' || err.code == 'RATE_LIMITED') return;\n            _.setTimeout(() => this.preloadVideo(), 5000);\n         });\n      }\n\n      this.loadingVideo = true;\n      FBInstant.getRewardedVideoAsync(_G.configGame.videoRewardId).then(\n         rewardedVideo => {\n            rewardedVideo.loadAsync().then(\n               () => {\n                  _.log(\"preloadVideo >> SUCCESS\");\n                  this.rewardedVideo = rewardedVideo;\n                  this.loadingVideo = false;\n               },\n               failFunc1\n            ).catch(failFunc1);\n         },\n         failFunc1\n      ).catch(failFunc1);\n   },\n\n\n   showVideo(orgSuccessCallBack, orgFailCallBack?) {\n      _.log(`VIDEO.showVideo() this.loadingVideo=${this.loadingVideo} // videoObject = `, this.rewardedVideo);\n      const successCallBack = () => orgSuccessCallBack && orgSuccessCallBack();\n      const failCallBack = (err?) => orgFailCallBack && orgFailCallBack(err);\n      if (!window['FBInstant']) return _.random() > 0.75 ? failCallBack() : successCallBack();\n\n      if (this.rewardedVideo) {\n         _.log(`ev_video_click_show`);\n         this.rewardedVideo.showAsync().then(() => {\n            _.log(`VIDEO.showVideo success`);\n            _.log(\"ev_watch_video_success\", 1, {});\n            successCallBack();\n            this.preloadVideo();\n         }).catch(err => {\n            console.warn(`VIDEO.showVideo error `, err);\n            if (this.isErrRewardNotCompleted(err)) {\n               _.log(`ev_video_err_reward_not_completed`);\n            } else {\n               _.log(`ev_video_err_other`);\n            }\n            this.preloadVideo();\n            failCallBack(err);\n         });\n      } else if (this.loadingVideo) {\n         // _.setTimeout(() => this.showVideo(successCallBack, failCallBack, videoPos), 200);\n         failCallBack({ code: \"LOADING\" });\n      } else {\n         failCallBack({ code: \"VIDEO_IS_NULL\" });\n      }\n   },\n\n\n   isErrRewardNotCompleted(err) {\n      return err.code == 'USER_INPUT' && err.message == 'Reward not completed';\n   },\n\n}"]}
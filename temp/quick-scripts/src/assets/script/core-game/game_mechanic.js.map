{"version":3,"sources":["assets/script/core-game/game_mechanic.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import * as _G from '../system/all_modules';\nconst { _, $ } = _G;\n\nexport const gameMechanic = {\n   currentHintCellNodeArr: [],\n   isShowingHint: false,\n\n   lastCategoryName: '',\n   lastFrameName: '',\n   currentCategoryName: '',\n   currentFrameName: '',\n   currentSizeMode: '3x3', // default for tut\n\n   isPaused: true,\n   timeRemaining: 0,\n   timeTickUnit: 0.2,\n\n   timerNode: null as cc.Node,\n   isLevelUp: false,\n\n   init() {\n      cc.director.getCollisionManager().enabled = true;\n      this.timerNode = cc.find('Canvas/play_area/scrollview_master/view/content/grid_area/time_level_bar/play_time/label_time');\n      _.setInterval(() => this.timerTickFunc(), this.timeTickUnit * 1000);\n   },\n\n\n   timerTickFunc() {\n      if (!this.isPlaying() || this.isPaused || _G.tutorial.isShowingTut) return;\n      this.timeRemaining = _.max(this.timeRemaining - this.timeTickUnit, 0);\n\n      const str = _.secondsToTimeCountdown(_.ceil(this.timeRemaining));\n      _G.utilsUI.fillLabel(this.timerNode, str);\n\n      if (this.timeRemaining == 0) return this.onLose();\n   },\n\n\n   previewGame(categoryName, frameName, maxCellX = 3, maxCellY = 3, isFromCategory = false) {\n      if (!isFromCategory && !this.isCurrentFrameLoaded() && this.currentCategoryName != 'tutorial') return;\n\n      this.currentSizeMode = maxCellX + 'x' + maxCellY\n      _G.coreUI.onTabPreview(this.currentSizeMode);\n\n      _G.coreUI.setUIPlayState((_G.user.isVersionV2 && isFromCategory) ? _G.types.gameState.v2 : _G.types.gameState.pick_mode);\n\n      const levelInfo = { maxCellX, maxCellY, categoryName, frameName };\n      this.currentCategoryName = categoryName;\n      this.currentFrameName = frameName;\n      _G.control.clearSelectedCellNode();\n\n      _G.coreUI.showNagScreen();\n      _G.mapVisual.clearMap(() => {\n         _G.coreUI.hideNagScreen();\n\n         // check the frame is loaded to show. Unless show loading\n         const loadingLabelNode = cc.find('Canvas/play_area/scrollview_master/view/content/grid_area/grid_stack/label_game_loading');\n         loadingLabelNode.active = true;\n         _.waitToRun(() => {\n            _G.coreUI.showNagScreen();\n            loadingLabelNode.active = false;\n            _G.mapVisual.render(levelInfo, () => {\n               // _.log(`calling _G.coreFX.showGrid() after mapVisual.render()`);\n               _G.coreFX.showGrid(() => _G.coreUI.hideNagScreen());\n            });\n\n            if (this.lastCategoryName != this.currentCategoryName || this.lastFrameName != this.currentFrameName) {\n               this.lastCategoryName = this.currentCategoryName;\n               this.lastFrameName = this.currentFrameName;\n               _G.analytic.logViewContent(this.currentCategoryName, this.currentFrameName);\n            }\n         }, 'isCurrentFrameLoaded()', this);\n\n      });\n\n      _G.coreUI.masterScrollViewComp.scrollToTop(0.2);\n   },\n\n\n   startGame() {\n      if (!this.isCurrentFrameLoaded() && this.currentCategoryName != 'tutorial') return;\n      if (this.currentSizeMode == '1x1') this.previewGame(this.currentCategoryName, this.currentFrameName, 3, 3);\n\n      this.timeRemaining = _G.configGame.playTime[this.currentSizeMode == '1x1' ? '3x3' : this.currentSizeMode];\n      _G.coreUI.setUIPlayState(_G.types.gameState.playing);\n      this.timerTickFunc();\n\n      _G.coreUI.updatePuzzleProgressBar(0);\n      _G.coreFX.hideGrid(() => {\n         this.shuffleCells(() => {\n            // _.log(`calling _G.coreFX.showGrid() after gameMechanic.shuffleCells()`);\n            _G.coreFX.showGrid();\n            this.updatePuzzleCompletionBar();\n         });\n      });\n\n      if (!_G.tutorial.isShowingTut) this.onResume();\n   },\n\n\n   replay() {\n      this.currentSizeMode = (this.currentSizeMode == '1x1') ? '3x3' : this.currentSizeMode;\n      const currentSizeArr = this.currentSizeMode.split('x');\n      this.previewGame(this.currentCategoryName, this.currentFrameName, parseInt(currentSizeArr[0]), parseInt(currentSizeArr[1]));\n      this.startGame();\n   },\n\n   // when user won a puzzle, pick a random puzzle that he has not played \n   playNextRandomPuzzle() {\n      const newPuzzleIdArr = _G.categoryList.frameNodeArr\n         .map(node => `${node.categoryName}_${node.name}`)\n         .filter(puzzleId => !_G.user.playedGames[puzzleId])\n      const newPuzzleId = _.randomArrItem(newPuzzleIdArr) || _.randomArrItem(Object.keys(_G.user.playedGames));\n      // _.log(`onWinContinue >> newPuzzleId = ${newPuzzleId} // newPuzzleIdArr=`, newPuzzleIdArr);\n\n      const tmpArr = newPuzzleId.split('_');\n      _G.resources.loadSingleFrame(tmpArr[0], tmpArr[1]);\n      this.previewGame(tmpArr[0], tmpArr[1], 3, 3, true);\n   },\n\n\n   isCurrentFrameLoaded() {\n      if (_G.tutorial.isShowingTut || _G.tutorial.isCurrentPuzzleTutorial()) return true;\n      return _G.resources.frameSprites[this.currentCategoryName][this.currentFrameName];\n   },\n\n\n   shuffleCells(callback?: Function) {\n      if (_G.tutorial.isShowingTut) return this.shuffleCellsForTut(callback);\n\n      // generate random cell position\n      const randomCellPosArr = [];\n      let orderIndex = 0;\n      for (let x = 1; x <= _G.mapVisual.currentMaxCellX; x++) {\n         for (let y = 1; y <= _G.mapVisual.currentMaxCellY; y++) {\n            randomCellPosArr.push({ x, y, orderIndex: orderIndex++ });\n         }\n      }\n      _.shuffleArray(randomCellPosArr);\n\n      // check if too many cells are in their correct positions\n      let correctedCellNum = 0;\n      const toltalCellNum = _G.mapVisual.currentMaxCellX * _G.mapVisual.currentMaxCellY;\n      const maxCorrectCellRatio = 0.35;\n      const isTooManyCorrectedCells = randomCellPosArr.some((cellPosInfo, index) => {\n         if (index == cellPosInfo.orderIndex) correctedCellNum++;\n         if (correctedCellNum / toltalCellNum > maxCorrectCellRatio) return true;\n      });\n      // _.log(`shuffleCells >> isTooManyCorrectedCells = ${isTooManyCorrectedCells} // correctedCellNum (${correctedCellNum}) / toltalCellNum(${toltalCellNum}) = ${correctedCellNum / toltalCellNum} `);\n      if (isTooManyCorrectedCells) return this.shuffleCells(callback);\n\n      // set real cell pos\n      _G.mapVisual.gridNode.children.map((childNode, i) => {\n         _G.mapVisual.setCellNodePos(childNode, randomCellPosArr[i].x, randomCellPosArr[i].y);\n      });\n\n      if (callback) callback();\n   },\n\n\n   shuffleCellsForTut(callback) {\n      const cellPosArr = [\n         { x: 3, y: 3 },\n         { x: 1, y: 1 },\n         { x: 3, y: 1 },\n         { x: 1, y: 3 },\n         { x: 2, y: 3 }, // -- must keep at index=4 (5th elem in arr)\n         { x: 2, y: 2 }, // -- must keep at index=5 (6th elem in arr)\n         { x: 2, y: 1 },\n         { x: 1, y: 2 },\n         { x: 3, y: 2 },\n      ];\n\n      const cellNodeArr = _G.mapVisual.gridNode.children;\n      cellNodeArr.map((cellNode, index) => _G.mapVisual.setCellNodePos(cellNode, cellPosArr[index].x, cellPosArr[index].y));\n\n      const cellNode1 = _G.tutorial.cellNode1 = cellNodeArr[5];\n      const cellNode2 = _G.tutorial.cellNode2 = cellNodeArr[4];\n      // _G.mapVisual.setCellNodePos(cellNode1, cellNode2.orgCellPos.x, cellNode2.orgCellPos.y);\n      // _G.mapVisual.setCellNodePos(cellNode2, cellNode1.orgCellPos.x, cellNode1.orgCellPos.y);\n\n      cellNodeArr.map(cellNode => {\n         this.checkCellInCorrectPos(cellNode);\n      })\n\n      if (callback) callback();\n   },\n\n   updatePuzzleCompletionBar() {\n      let correctCellCount = 0;\n      let wrongCellCount = 0;\n      _G.mapVisual.gridNode.children.map(cellNode => {\n         if (this.isFixedCell(cellNode)) correctCellCount++;\n         else wrongCellCount++;\n      });\n      _G.coreUI.updatePuzzleProgressBar(correctCellCount / (wrongCellCount + correctCellCount), 0.2);\n   },\n\n   onSwapCell(cellNode1, cellNode2) {\n      _G.gameMechanic.clearHint();\n      _G.coreUI.showNagScreen();\n      _G.mapVisual.swapCellAnim(cellNode1, cellNode2, () => {\n         _G.coreUI.hideNagScreen();\n         this.checkCellInCorrectPos(cellNode1);\n         this.checkCellInCorrectPos(cellNode2);\n         this.updatePuzzleCompletionBar();\n         this.checkWin();\n\n         _G.tutorial.checkOnSwapCells();\n      });\n   },\n\n\n   checkWin() {\n      const isWin = _G.mapVisual.gridNode.children.every(cellNode => this.isFixedCell(cellNode));\n      _.log(` isWin = ${isWin} `);\n      if (!isWin) return;\n      this.onPause();\n\n      const starToAdd = _G.configGame.winCoinReward[this.currentSizeMode];\n      _G.user.addStars(starToAdd, true);\n      _G.utilsUI.fillLabel(cc.find('Canvas/layout_win/dialog/star_num_base/label_stars'), '+' + starToAdd);\n      // _G.utilsUI.fillLabel(this.winTimerNode, this.timerNode.getComponent(cc.Label).string);\n\n      _G.coreUI.setUIPlayState(_G.types.gameState.won);\n\n      this.isLevelUp = _G.user.addExp(_G.configGame.winExp, true);\n      if (this.isLevelUp) _G.user.addStars(_G.configGame.levelUpCoinReward, true);\n\n      // save game as played & re-render icon-checked for all frame cells\n      const gameName = this.currentCategoryName + '_' + this.currentFrameName;\n      if (!_G.user.playedGames[gameName]) {\n         _G.user.playedGames[gameName] = 1;\n         _G.utilsData.save({ playedGames: _G.user.playedGames });\n         _G.categoryList.updateAllIconCheckeds();\n      }\n\n      // Play win anim\n      _G.coreUI.showNagScreen(3.8);\n      _G.coreUI.masterScrollViewComp.scrollToTop(0.2);\n      _.setTimeout(() => _G.coreFX.playWinAnim(), 200);\n\n      // copy frame grid to show in \"layotu_win\"\n      _.setTimeout(() => {\n         this.copyFrameGridToTarget(cc.find('Canvas/layout_win/dialog/grid/grid_container'));\n      }, 2000);\n   },\n\n   copyFrameGridToTarget(targetGridNode: cc.Node) {\n      targetGridNode.removeAllChildren();\n      const gridNode = _.copyNode(_G.mapVisual.gridNode, targetGridNode);\n      gridNode.y = 0;\n      gridNode.scale = targetGridNode.width / _G.mapVisual.mainFrameWidth;\n      gridNode.children.map(cellNode => {\n         cc.find('mask', cellNode).width -= 3;\n         cc.find('mask', cellNode).height -= 3;\n         cellNode.scale = 1;\n         cc.find('correct_tile_fx', cellNode).active = false;\n      });\n   },\n\n\n   onLose() {\n      this.onPause();\n      _G.control.clearSelectedCellNode(true);\n      _G.coreUI.showNagScreen(0.5);\n      _G.coreUI.masterScrollViewComp.scrollToTop(0.2);\n      _.setTimeout(() => {\n         _G.coreUI.showLayout('layout_game_over');\n         _G.coreUI.hideButtonBack();\n         _G.mapVisual.gridNode.children.map(cellNode => {\n            _G.mapVisual.setCellNodePos(cellNode, cellNode.orgCellPos.x, cellNode.orgCellPos.y, true);\n         });\n         this.copyFrameGridToTarget(cc.find('Canvas/layout_game_over/dialog/grid/grid_container'));\n      }, 200);\n   },\n\n\n   checkToShowLevelUp() {\n      if (!this.isLevelUp) return;\n      this.isLevelUp = false;\n\n      const labelLevelX = cc.find('Canvas/layout_level_up/dialog/label_level_up_to_level_X');\n      _G.localize.translateSingleLabel(labelLevelX, _G.user.level);\n\n      _G.coreFX.fxShowPopupHeader(cc.find('Canvas/layout_level_up'));\n      _G.coreUI.showLayoutAnim('layout_level_up');\n      return true;\n   },\n\n   onHint() {\n      if (this.isShowingHint) return;\n      _.setTimeout(() => this.isShowingHint = true);\n\n      const wrongCellNode = _G.mapVisual.gridNode.children.find(cellNode => !this.isFixedCell(cellNode));\n      if (!wrongCellNode) return;\n\n      _G.user.addStars(-_G.configGame.hintCoinPrice);\n\n      _G.control.clearSelectedCellNode();\n      const wrongCellNode2 = _G.mapVisual.gridNode.children.find(cellNode => {\n         return cellNode.cellPos.x == wrongCellNode.orgCellPos.x && cellNode.cellPos.y == wrongCellNode.orgCellPos.y\n      });\n\n      this.currentHintCellNodeArr = [wrongCellNode, wrongCellNode2];\n      _G.mapVisual.bringCellsToTop(...this.currentHintCellNodeArr);\n\n      const fxTime = 0.2;\n      _G.coreUI.showNagScreen(fxTime);\n      this.currentHintCellNodeArr.map(cellNode => {\n         cc.find('border_highlight', cellNode).active = true;\n\n         cellNode.stopAllActions();\n         cc.tween(cellNode).to(fxTime, { scale: 1.15 }).start();\n      });\n\n      _.setTimeout(() => {\n         this.onSwapCell(this.currentHintCellNodeArr[0], this.currentHintCellNodeArr[1]);\n      }, fxTime * 1000);\n   },\n\n   isPlaying() {\n      return _G.coreUI.currentState == _G.types.gameState.playing;\n   },\n\n   onPause(isShowPopupPause?) {\n      if (_G.tutorial.isShowingTut) return;\n      this.isPaused = true;\n      if (isShowPopupPause && !_G.tutorial.isShowingTut && this.isPlaying()\n         && !cc.find('Canvas/layout_pause').active\n         && !cc.find('Canvas/layout_game_over').active\n         && !cc.find('Canvas/layout_alert').active\n      ) _G.coreUI.showLayoutAnim('layout_pause');\n   },\n\n   onResume() {\n      this.isPaused = false;\n      if (cc.find('Canvas/layout_pause').active) _G.coreUI.hideLayoutAnim('layout_pause');\n   },\n\n\n   clearHint(specificCell?: cc.Node) {\n      this.isShowingHint = false;\n      _G.mapVisual.gridNode.children.map(cellNode => {\n         if (specificCell && cellNode != specificCell) return;\n         cc.find('border_highlight', cellNode).active = false;\n         if (!specificCell) cellNode.scale = 1;\n      });\n   },\n\n\n   // =====================================================\n   // SUPPROTIVE FUNCS\n   // =====================================================\n\n   checkCellInCorrectPos(cellNode) {\n      if (!this.isFixedCell(cellNode)) return;\n      const maskNode = cc.find('mask', cellNode);\n      maskNode.width = cellNode.width;\n      maskNode.height = cellNode.height;\n      _G.audio.playSound('correctpiece');\n      _G.coreFX.onCorrectCellPos(cellNode);\n   },\n\n\n   isFixedCell(cellNode) {\n      return cellNode.cellPos.x == cellNode.orgCellPos.x && cellNode.cellPos.y == cellNode.orgCellPos.y;\n   }\n\n\n}"]}
{"version":3,"sources":["assets/script/core-game/settings.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import * as _G from '../system/all_modules';\nconst { _, $ } = _G;\n\nconst entryNameArr = ['sound', 'music'];\nconst defaultEntryValue = { music: true, sound: true, language: 'en_US' };\n\nexport const settings = {\n   node: null as cc.Node,\n   entryContainerNode: null as cc.Node,\n\n   sound: true,\n   music: true,\n   language: true,\n\n   isInitialized: false,\n\n   init() {\n      this.node = cc.find('Canvas/layout_settings');\n      this.entryContainerNode = cc.find('dialog', this.node);\n\n      // get data & render switcher value accordingly\n      _G.user.addLoginDataFields(...entryNameArr);\n      _G.user.addInitCallback(data => {\n         entryNameArr.map(entryName => {\n            const isValueUndefined = (data[entryName] === undefined || data[entryName] === null);\n            const value = this[entryName] = isValueUndefined ? defaultEntryValue[entryName] : data[entryName];\n            this.setSwitcherOnOff(entryName, value);\n         });\n         this.isInitialized = true;\n      });\n      this.bindSwitcherButtonHandlers();\n\n\n      this.renderLanguages();\n      _G.localize.addInitCallback(() => {\n         this.focusLanguage(_G.localize.currentLanguageCode);\n      })\n   },\n\n   bindSwitcherButtonHandlers() {\n      [\n         cc.find('switcher_sound', this.entryContainerNode),\n         cc.find('switcher_music', this.entryContainerNode),\n      ].map(switcherNode => {\n         _G.utilsUI.makeButton(switcherNode, () => {\n            const entryName = switcherNode.name.replace('switcher_', '');\n            this.setEntryValue(entryName, !this[entryName]);\n         });\n      });\n   },\n\n\n   setEntryValue(entryName, value) {\n      // update value & save value to DB\n      this[entryName] = value;\n      _G.utilsData.save({ [entryName]: value });\n      this.setSwitcherOnOff(entryName, value); // update switcher in layout settings\n\n      if (entryName == 'music') {\n         if (value) _G.audio.playBgMusic();\n         else _G.audio.stopBgMusic();\n      }\n   },\n\n\n   setSwitcherOnOff(entryName, value) {\n      const switcherNode = cc.find(`switcher_${entryName}`, this.entryContainerNode);\n      if (!switcherNode) return;\n      _G.utilsUI.showOnlyChildNodeWithNameAs(switcherNode, (value ? 'on' : 'off'));\n   },\n\n\n\n\n   // ================================================\n   // Languages\n   // ================================================\n\n   renderLanguages() {\n      const sampleNode = cc.find('Canvas/sample_nodes/language_button');\n      const containerNode = cc.find('Canvas/layout_settings/dialog/language_scrollview/view/content');\n      containerNode.removeAllChildren();\n\n      _G.localize.supportedLanguageArr.map(langInfo => {\n         const newNode = _.copyNode(sampleNode, containerNode);\n         newNode.langCode = langInfo.code;\n         _G.utilsUI.fillChildLabelByPath(newNode, 'label_on', langInfo.name.toUpperCase());\n         _G.utilsUI.fillChildLabelByPath(newNode, 'label_off', langInfo.name.toUpperCase());\n         _G.utilsUI.makeBubbleButton(newNode, () => {\n            this.focusLanguage(langInfo.code);\n            _G.localize.onLanguageChanges(langInfo.code);\n         })\n      });\n\n      _.setTimeout(() => this.adjustLanguageScrollView(), 100);\n   },\n\n\n   focusLanguage(langCode) {\n      const containerNode = cc.find('Canvas/layout_settings/dialog/language_scrollview/view/content');\n      containerNode.children.map(node => {\n         const isOn = (node.langCode == langCode);\n         ['label_on', 'bg_on'].map(childName => cc.find(childName, node).active = isOn);\n      })\n   },\n\n\n   adjustLanguageScrollView() {\n      const scrollViewNode = cc.find('Canvas/layout_settings/dialog/language_scrollview');\n      scrollViewNode.height = cc.winSize.height - 428;\n   },\n\n}"]}
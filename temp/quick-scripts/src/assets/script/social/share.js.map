{"version":3,"sources":["assets/script/social/share.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import * as _G from '../system/all_modules';\nconst _ = _G._;\n\nconst { ccclass, property } = cc._decorator;\n\nconst ORG_FRAME_SIZE = 800;\n\n@ccclass\nexport default class Share extends cc.Component {\n   async initBase64Picture(targetNode: cc.Node) {\n      if (!targetNode.activeInHierarchy) targetNode.active = true;\n\n      const cameraNode = new cc.Node();\n      targetNode.addChild(cameraNode);\n      let cameraComp = cameraNode.addComponent(cc.Camera);\n      let texture = new cc.RenderTexture();\n\n      let gl = cc.game._renderContext;\n      texture.initWithSize(targetNode.width, targetNode.height, gl.STENCIL_INDEX8);\n      cameraComp.targetTexture = texture;\n      cameraComp.zoomRatio = (_.isANDROID || _.isIOS) ? 1.7 : 1.5;\n\n      cameraComp.backgroundColor = cc.Color.WHITE;\n      cameraComp.clearFlags = cc.Camera.ClearFlags.DEPTH | cc.Camera.ClearFlags.STENCIL | cc.Camera.ClearFlags.COLOR;\n      // cameraComp.cullingMask = 0xffffffff;\n\n      let width = texture.width;\n      let height = texture.height;\n      let _canvas = document.createElement('canvas');\n      _canvas.width = width;\n      _canvas.height = height;\n\n      let ctx = _canvas.getContext('2d');\n      cameraComp.render(targetNode);\n      let data = texture.readPixels();\n      // write the render data\n\n      let rowBytes = width * 4;\n      for (let row = 0; row < height; row++) {\n         let srow = height - 1 - row;\n         let data2 = new Uint8ClampedArray(data.buffer, srow * width * 4, rowBytes);\n         let imageData = new ImageData(data2, width, 1);\n         ctx.putImageData(imageData, 0, row);\n      }\n\n      const dataURL = _canvas.toDataURL(\"image/jpeg\");\n\n      setTimeout(() => {\n         targetNode.active = false;\n         cameraNode.removeFromParent();\n      }, 2000);\n\n      return dataURL;\n   }\n\n   async initPayload(targetNode: cc.Node, content: string, extraData?: any) {\n      try {\n         const base64Image = await this.initBase64Picture(targetNode);\n         const payload = {\n            intent: 'SHARE',\n            image: base64Image,\n            text: content,\n            data: extraData,\n         };\n         _.log(`--------payload = `, payload);\n         return payload;\n      } catch (error) { throw error; }\n   }\n\n   async sharePostNormal(isFromV2Screen, shareCode) {\n      cc.find('Canvas/shares/picture/overlay').active = !isFromV2Screen;\n\n      _G.utilsUI.fillLabel(cc.find('Canvas/shares/picture/overlay/score_base/label_score'), '+' + _G.user.exp);\n\n      // fill share node with current frames \n      const picNode = _.copyNode(_G.mapVisual.fullPicNode, cc.find('picture/full_frame', this.node));\n      // picNode.scale = ORG_FRAME_SIZE / picNode.width;\n      cc.find('capture_hard_mask', picNode).active = true;\n\n      // capture the frames\n      try {\n         const payload = await this.initPayload(\n            this.node,\n            '',\n            {\n               version: 'v2',\n               isFromNewsFeed: 1,\n               puzzle_id: _G.gameMechanic.currentCategoryName + '_' + _G.gameMechanic.currentFrameName\n            }\n         );\n\n         // _.log(payload);\n         await FBInstant.shareAsync(payload);\n      } catch (error) { _.log(error) }\n   }\n\n\n}\n"]}
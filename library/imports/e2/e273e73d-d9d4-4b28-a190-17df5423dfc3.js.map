{"version":3,"sources":["assets/script/services/utils/utils_anim_fx.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import * as _G from '../../system/all_modules';\nconst _ = _G._;\n\n\nexport const utilsAnimFx = {\n   fxNodePool: {},\n\n   init() {\n\n   },\n\n\n   replayParticle(node: cc.Node) {\n      if (!node || !node.getComponent(cc.ParticleSystem)) return;\n      node.active = true;\n      node.getComponent(cc.ParticleSystem).resetSystem();\n   },\n\n   // play a clip attached to animation component of a node\n   playNodeAnim(node: cc.Node, clipName?: string, repeatTime?: number, isKeepPreviousClip = false, callback?: Function) {\n      const animComp = node.getComponent(cc.Animation);\n      if (!node.activeInHierarchy || !animComp) return;\n      clipName = clipName || (animComp.defaultClip ? animComp.defaultClip.name : '');\n      if (!clipName) return;\n\n      const animState = animComp[isKeepPreviousClip ? 'playAdditive' : 'play'](clipName);\n      if (!animState) return;\n      animState.repeatCount = (repeatTime == -1 ? Infinity : repeatTime) || 1;\n\n      if (callback) animComp.on('finished', () => {\n         animComp.off('finished');\n         callback();\n      });\n\n      return animState;\n   },\n\n   playNodeAnimAsSoonAsNodeActive(node: cc.Node, clipName?: string, repeatTime = 1, isKeepPreviousClip = true) {\n      const varName = 'waitInterval2PlayAnimWhenActive';\n      node[varName] = _.waitToRun(() => {\n         if (node[varName]) clearInterval(node[varName]);\n         this.playNodeAnim(node, clipName, repeatTime, isKeepPreviousClip);\n      }, 'activeInHierarchy', node);\n   },\n\n\n   // play a clip attached to animation component of a node\n   playNodeAnimArr(node: cc.Node, orgClipNameArr?: string[], isKeepPreviousClip = false, callback?: Function) {\n      if (!node.activeInHierarchy) return;\n      const animComp = node.getComponent(cc.Animation);\n      if (!node.activeInHierarchy || !animComp) return;\n      const clipNameArr = [...orgClipNameArr];\n      animComp.on('finished', () => {\n         if (clipNameArr.length) this.playNodeAnim(node, clipNameArr.shift(), 1, isKeepPreviousClip);\n         else {\n            animComp.off('finished');\n            if (callback) callback();\n         }\n      });\n      this.playNodeAnim(node, clipNameArr.shift(), 1, isKeepPreviousClip);\n   },\n\n   stopAllNodeAnims(node: cc.Node) {\n      const animComp = node.getComponent(cc.Animation);\n      if (!animComp) return;\n      animComp.stop();\n      animComp.off('finished');\n   },\n\n   // reset a node at state of frame 0 of an animation clip\n   stopAnimAtFrame0(node: cc.Node, clipName: string) {\n      const animComp = node.getComponent(cc.Animation);\n      animComp.play('ufo_ring_fx');\n      _.setTimeout(() => {\n         animComp.setCurrentTime(0);\n         this.stopAllNodeAnims(node)\n      });\n   },\n\n\n   // subtrack current number from \n   playIncreasingNumberLabel(labelNode: cc.Node, oldNumber: number, addedAmount: number, updateCount = 5, duration = 0.5, delayStartTime = 0, template = 'xxx') {\n      // get current number on label\n      const labelComp = labelNode.getComponent(cc.Label);\n      const incrementAmount = addedAmount / updateCount;\n      const updateDelay = duration / updateCount;\n\n      cc.tween(labelNode).delay(delayStartTime).repeat(\n         updateCount,\n         cc.tween().call(() => {\n            oldNumber += incrementAmount;\n            const currentNumberStr = _.formatMoney(_.round(oldNumber));\n            labelComp.string = template.replace(/xxx/g, currentNumberStr);\n            // _.log(` playIncreasingNumberLabel >> currentNumberStr = ${currentNumberStr} // labelComp.string=${labelComp.string} `);\n         }).delay(updateDelay)\n      ).start();\n   },\n\n\n   // handle node pool\n   getNewFxNode(sampleNode: cc.Node, fxContainer: cc.Node) {\n      if (!sampleNode.nodePoolId) sampleNode.nodePoolId = _.getNewUuid();\n      if (!this.fxNodePool[sampleNode.nodePoolId]) this.fxNodePool[sampleNode.nodePoolId] = [];\n      const newNode = this.fxNodePool[sampleNode.nodePoolId].pop() || _.copyNode(sampleNode);\n      newNode.nodePoolId = sampleNode.nodePoolId;\n      newNode.parent = fxContainer || _G.coreFX.fxContainer;\n      return newNode;\n   },\n\n\n   saveFxNodeToPool(node: cc.Node) {\n      node.stopAllActions();\n      node.active = false;\n      this.fxNodePool[node.nodePoolId].unshift(node);\n   },\n\n\n   // particles fly from node A to node B\n   particlesFlyFromA2B(sampleNode: cc.Node, nodeA: cc.Node, nodeB: cc.Node, animConfig?: any, fxContainer?: cc.Node) {\n      const defaultParticleFlyA2BConfigs = {\n         numberOfNode: 20,\n         delayStartTime: 0.05,\n         flyDuration: 1,\n         randomBezierPointRange: { x: 200, y: 200 },  // x > 0 & y > 0\n      }\n      const { numberOfNode, flyDuration, delayStartTime, randomBezierPointRange } = animConfig || defaultParticleFlyA2BConfigs;\n      const posDiffVec2 = _.getGlobalPosDiff(nodeA, nodeB);\n      // _.log(` particlesFlyFromA2B >> posDiffVec2 = ${posDiffVec2} // numberOfNode=${numberOfNode}, flyDuration=${flyDuration}, delayTimeEachNode=${delayTimeEachNode} `);\n      for (let i = 0; i < numberOfNode; i++) {\n         const newNode = this.getNewFxNode(sampleNode, fxContainer);\n         newNode.active = true;\n         newNode.opacity = 255;\n         _.setGlobalPosToNode(newNode, nodeA);\n         const bezierP1 = this.getRandomPointInRage(randomBezierPointRange);\n         const bezierP2 = this.getRandomPointInRage(randomBezierPointRange);\n         cc.tween(newNode)\n            .delay(i * delayStartTime)\n            .bezierBy(flyDuration, bezierP1, bezierP2, posDiffVec2)\n            .call(() => { this.saveFxNodeToPool(newNode); })\n            .start();\n      }\n   },\n\n   getRandomPointInRage(pointRange) {\n      return cc.v2(\n         _.randomNumber(pointRange.x * 2) - pointRange.x,\n         _.randomNumber(pointRange.y * 2) - pointRange.y\n      );\n   },\n\n\n   // fly a node to position of another\n   nodeFlyFromAtoB(node: cc.Node, targetNode: cc.Node, duration: number = 0.3, callback?: Function) {\n      const diffVec = _.getGlobalPosDiff(node, targetNode);\n      cc.tween(node).by(duration, { position: diffVec }).call(() => callback && callback()).start();\n   },\n\n\n\n   // ===========================================\n   // screenshot a node to get spriteFrame (jpg)\n   // *** NOTE: CODE NOT WORKING !!! JUST COPIED FROM ANOTHER PLACE\n\n   captureNodeToTexture(targetNode: cc.Node) {\n      if (!targetNode.activeInHierarchy) targetNode.active = true;\n\n      const cameraNode = new cc.Node();\n      targetNode.addChild(cameraNode);\n      let cameraComp = cameraNode.addComponent(cc.Camera);\n      let texture = new cc.RenderTexture();\n\n      let gl = cc.game._renderContext;\n      texture.initWithSize(targetNode.width, targetNode.height, gl.STENCIL_INDEX8);\n      cameraComp.targetTexture = texture;\n      cameraComp.zoomRatio = 1.3;\n\n      cameraComp.backgroundColor = cc.Color.WHITE;\n      cameraComp.clearFlags = cc.Camera.ClearFlags.DEPTH | cc.Camera.ClearFlags.STENCIL | cc.Camera.ClearFlags.COLOR;\n      // cameraComp.cullingMask = 0xffffffff;\n\n      let width = texture.width;\n      let height = texture.height;\n      let _canvas = document.createElement('canvas');\n      _canvas.width = width;\n      _canvas.height = height;\n\n      let ctx = _canvas.getContext('2d');\n      cameraComp.render(targetNode);\n      let data = texture.readPixels();\n      // write the render data\n\n      let rowBytes = width * 4;\n      for (let row = 0; row < height; row++) {\n         let srow = height - 1 - row;\n         let data2 = new Uint8ClampedArray(data.buffer, srow * width * 4, rowBytes);\n         let imageData = new ImageData(data2, width, 1);\n         ctx.putImageData(imageData, 0, row);\n      }\n\n      const dataURL = _canvas.toDataURL(\"image/jpeg\");\n\n      setTimeout(() => {\n         targetNode.active = false;\n         cameraNode.removeFromParent();\n      }, 1000);\n\n      return dataURL;\n   }\n\n\n}"]}
{"version":3,"sources":["assets/script/services/utils/utils_ui.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import * as _G from '../../system/all_modules';\nconst { _, $ } = _G;\n\nconst canvasTouchEventHandlers = {\n   touchstart: [],\n   touchmove: [],\n   touchend: [],\n};\n\nexport const utilsUI = {\n   init() {\n      this.bindCanvasTouchHandler();\n   },\n\n   // ========== Nodes & Labels\n   fillLabel(labelNode: cc.Node, text: string) {\n      const labelComp = labelNode.getComponent(cc.Label) || labelNode.getComponent(cc.RichText);\n      labelComp.string = text;\n   },\n\n   fillChildLabelByPath(node: cc.Node, path: string, text: string) {\n      const labelNode = cc.find(path, node);\n      if (labelNode) this.fillLabel(labelNode, text);\n   },\n\n   showOnlyChildNodeWithNameAs(parentNode: cc.Node, childNodeName: string, isUseOpacity = false) {\n      let retChildNode: cc.Node;\n      parentNode.children.map(childNode => {\n         const isSelected = (childNode.name == childNodeName);\n         if (isSelected) retChildNode = childNode;\n         childNode.active = isSelected;\n         if (isUseOpacity) childNode.opacity = (isSelected ? 255 : 0);\n      });\n      return retChildNode;\n   },\n\n\n   setLabelCountDownTimer(labelNode: cc.Node, targetUTC: number, timeoutCallback?: Function) {\n      if (typeof labelNode === 'string') labelNode = cc.find(labelNode);\n      if (labelNode.countDownTimerVar) clearInterval(labelNode.countDownTimerVar);\n\n      const timerFunc = () => {\n         if (!labelNode.parent) return clearInterval(labelNode.countDownTimerVar);\n         const timeDiff = targetUTC - _.getMsPassedUTC();\n         const timeDiffStr = _.secondsToTimeCountdown(_.floor(timeDiff / 1000));\n         _G.utilsUI.fillLabel(labelNode, timeDiffStr);\n\n         if (timeDiff <= 0) {\n            clearInterval(labelNode.countDownTimerVar);\n            if (timeoutCallback) timeoutCallback();\n         };\n      }\n      labelNode.countDownTimerVar = setInterval(timerFunc, 500);\n      timerFunc();\n   },\n\n   // fill node spriteFrame\n   setNodeSprite(node: cc.Node, spriteFrame: cc.SpriteFrame) {\n      if (!node || !node.getComponent(cc.Sprite)) return\n      node.getComponent(cc.Sprite).spriteFrame = spriteFrame;\n   },\n\n   // fill node spriteFrame\n   setNodeSpriteFromUrl(node: cc.Node, url: string, callback?: Function) {\n      if (!node || !node.getComponent(cc.Sprite)) return;\n      cc.assetManager.loadRemote(url, (error, texture) => {\n         if (!error) this.setNodeSprite(node, new cc.SpriteFrame(texture));\n         return callback && callback(texture);\n      });\n   },\n\n   // fill node spriteFrame\n   setNodeSpriteFillRange(node: cc.Node, fillRange: number) {\n      if (!node || !node.getComponent(cc.Sprite)) return\n      node.getComponent(cc.Sprite).fillRange = fillRange;\n   },\n\n\n\n   // ===================================================\n   // Touch handlers\n   // ===================================================\n\n   // add native button component to node with handler like dragging & dropping component manually\n   // to exploit button trasition effect and behavior in scrollView\n   makeButton(node: cc.Node | string, handlerFunc: Function, isBubble?, isMuteSound?) {\n      // setTimeout to make this process run later to prevent node not initalized yet\n      const myNode: cc.Node = _.isString(node) ? cc.find(node) : node;\n      _.setTimeout(() => {\n         if (!myNode) _.log(`undefined node path = ${node}`);\n         if (!myNode.getComponent('free_button_comp')) myNode.addComponent('free_button_comp');\n\n         const butComp = myNode.addComponent(cc.Button);\n         butComp.transition = isBubble ? cc.Button.Transition.SCALE : null;\n         butComp.zoomScale = node.buttonCompZoomScale || 1.2;\n         const eventHandler = new cc.Component.EventHandler();\n         eventHandler.target = myNode;\n         eventHandler.component = 'free_button_comp';\n         eventHandler.handler = 'freeHandler';\n         butComp.clickEvents.push(eventHandler);\n\n         myNode.freeButtonHandlerFunc = () => {\n            handlerFunc();\n            if (!isMuteSound) _G.audio.playSound('button_click');\n            canvasTouchEventHandlers['touchstart'].map(f => f());\n         };\n      });\n   },\n\n   makeBubbleButton(node, handlerFunc) {\n      return this.makeButton(node, handlerFunc, true);\n   },\n\n\n   singleTouchSet(node: cc.Node, touchStartFunc: Function, touchMoveFunc: Function, touchEndFunc: Function) {\n      const callFuncWithEvent = (func: Function, event, touchId?) => {\n         const pos = event.touch.getLocation();\n         func(pos, event, touchId);\n      }\n\n      node.on('touchstart', (event) => {\n         if (node._customTouchId) { return; }\n         node._customTouchId = event.touch._id + 1;\n         touchStartFunc && callFuncWithEvent(touchStartFunc, event, node._customTouchId);\n      });\n\n      touchMoveFunc && node.on('touchmove', (event) => {\n         var tID = event.touch._id + 1;\n         if (tID != node._customTouchId) return;\n         if (touchMoveFunc) callFuncWithEvent(touchMoveFunc, event, tID);\n      });\n\n      var touchDestroy = (event) => {\n         var tID = event.touch._id + 1;\n         if (tID != node._customTouchId) return;\n         node._customTouchId = null;\n         if (touchEndFunc) callFuncWithEvent(touchEndFunc, event, tID);\n      }\n\n      node.on('touchend', touchDestroy);\n      node.on('touchcancel', touchDestroy);\n   },\n\n\n   bindCanvasTouchHandler() {\n      const canvasNode = cc.find('Canvas');\n      this.singleTouchSet(\n         canvasNode,\n         (pos) => {\n            canvasTouchEventHandlers['touchstart'].map(f => f(pos));\n         },\n         (pos) => {\n            canvasTouchEventHandlers['touchmove'].map(f => f(pos));\n         },\n         (pos) => {\n            canvasTouchEventHandlers['touchend'].map(f => f(pos));\n         },\n      )\n   },\n\n   addCanvasTouchHandler(eventName, func) {\n      const handlerArr = canvasTouchEventHandlers[eventName];\n      if (!handlerArr) return;\n      handlerArr.push(func);\n   },\n\n\n};"]}
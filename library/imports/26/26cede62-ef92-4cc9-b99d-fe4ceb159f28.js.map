{"version":3,"sources":["assets/script/system/localization/localize.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["import * as _G from '../../system/all_modules';\nconst _ = _G._;\ndeclare const require;\n\nimport { supportLocalizeMessage } from './localize_message';\n\n\nconst toCorrectLangCode = {\n   en_GB: 'en_US',\n   en_UD: 'en_US',\n   pt_BR: 'pt_PT',\n   fr_CA: 'fr_FR',\n   es_LA: 'es_ES',\n   es_MX: 'es_ES', // espanol mexico\n}\n\nconst subscribedNodePath = {};\n\n\nexport const localize = {\n   supportedLanguageArr: [\n      { code: 'en_US', name: 'English' },\n      { code: 'es_ES', name: 'Español' },\n      { code: 'pt_PT', name: 'Português' },\n      { code: 'fr_FR', name: 'Français' },\n      { code: 'ar_AR', name: 'عربى' },\n      { code: 'id_ID', name: 'Indonesia' },\n      { code: 'vi_VN', name: 'Tiếng Việt' },\n      { code: 'th_TH', name: 'ภาษาไทย' },\n      { code: 'tr_TR', name: 'Türkçe' },\n      { code: 'de_DE', name: 'Deutsch' },\n      { code: 'it_IT', name: 'Italiano' },\n   ],\n\n   currentLanguageCode: 'en_US',\n   defaultLanguageObject: require('en_US'),\n   currentLanguageObject: null,\n\n   languageChangeCallbackArr: [],\n   initCallbackArr: [],\n   isInitialized: false,\n\n\n   init() {\n      this.currentLanguageObject = this.defaultLanguageObject;\n      _G.user.addLoginDataFields('userLanguageCode');\n      _G.user.addInitCallback((data) => {\n         // _.log(` _G.localize >> init >> data(userLanguageCode) = ${data.userLanguageCode} `, data);\n         this.isInitialized = true;\n         const fbLangCode = (window['FBInstant']) ? FBInstant.getLocale() : null; //  get language from user locale => translate ASAP\n         this.onLanguageChanges(data.userLanguageCode || fbLangCode, true);\n      });\n\n      // this.listAllLabels();\n   },\n\n\n   listAllLabels() {\n      _.log(` listAllLabels = `);\n      cc.find('Canvas').getComponentsInChildren(cc.Label).map(comp => {\n         _.log(_.getNodePath(comp.node));\n      });\n   },\n\n\n   // ======= handle language changes & register callback when language changes\n   onLanguageChanges(langCode: string, isInit = false) {\n      langCode = toCorrectLangCode[langCode] || langCode;\n      _.log(` _G.localize >> onLanguageChanged langCode=${langCode} `);\n      if (!isInit && (!langCode || this.currentLanguageCode == langCode)) return;\n      try {\n         langCode = langCode || this.currentLanguageCode;\n         this.currentLanguageObject = require(langCode);\n         this.currentLanguageCode = langCode;\n         _G.utilsData.save({ userLanguageCode: this.currentLanguageCode });\n      } catch (e) { }\n\n      if (isInit) this.initCallbackArr.map(func => func()); // execute init callback\n      else this.languageChangeCallbackArr.map(func => func(langCode)); // execute lang-change callback\n   },\n\n\n   // === will subscribe to initCallbacks, languageChangesCallback & immediately call to translateContainer()\n   subscribeTranslate(containerNode) {\n      const path = _.getNodePath(containerNode);\n      const translateFunc = () => this.translateContainer(containerNode);\n      if (!subscribedNodePath[path]) {\n         this.initCallbackArr.push(translateFunc);\n         this.languageChangeCallbackArr.push(translateFunc);\n      }\n      if (this.isInitialized) translateFunc();\n   },\n\n   addInitCallback(f) {\n      if (this.isInitialized) return f();\n      this.initCallbackArr.push(f);\n   },\n\n   // ======= translate when language changes or when new node created\n\n   // translate entire container with multiple label nodes inside\n   translateContainer(containerNode: cc.Node) {\n      // _.log(`_G.localize >> translateContainer >> containerNode=${containerNode ? containerNode.name : ''} // this.currentLanguageObject = `, this.currentLanguageObject);\n      if (!containerNode) return;\n      containerNode.getComponentsInChildren(cc.Label).map(labelComp => this.translateSingleLabel(labelComp.node));\n      containerNode.getComponentsInChildren(cc.RichText).map(labelComp => this.translateSingleLabel(labelComp.node));\n   },\n\n   translateSingleLabel(labelNode: cc.Node, localizeData?) {\n      const translateGuide = this.currentLanguageObject[labelNode.name] || this.defaultLanguageObject[labelNode.name];\n      // _.log(` _G.localize >> translateSingleLabel >> labelNode.name=${labelNode.name} // translateGuide=${translateGuide} // labelNode.localizeData = ${labelNode.localizeData}`);\n      if (!translateGuide) return;\n      labelNode.localizeData = localizeData !== undefined ? localizeData : labelNode.localizeData;\n      let text2Fill = translateGuide;\n      if (typeof translateGuide == 'function') text2Fill = translateGuide(labelNode.localizeData);\n      _G.utilsUI.fillLabel(labelNode, text2Fill);\n   },\n\n\n   // translate non-labelNode texts (ex: update-async-message content & cta);\n   translate(textCode, localizeData?) {\n      const translateGuide = this.currentLanguageObject[textCode] || this.defaultLanguageObject[textCode];\n      if (!translateGuide) return textCode;\n      let textResult = translateGuide;\n      if (typeof translateGuide == 'function') textResult = translateGuide(localizeData);\n      return textResult;\n   },\n\n\n   // get multilang objects for message content & cta\n   ...supportLocalizeMessage,\n\n};\n\n\n\n\n"]}
{"version":3,"sources":["assets/script/control/control.ts"],"names":[],"mappings":";;;;;;;AAAA,0CAA4C;AACpC,IAAA,CAAC,GAAQ,EAAE,EAAV,EAAE,CAAC,GAAK,EAAE,EAAP,CAAQ;AAEP,QAAA,OAAO,GAAG;IACpB,gBAAgB,EAAE,IAAe;IAEjC,IAAI;IACJ,CAAC;IAED,qBAAqB,YAAC,QAAgB;QAAhB,yBAAA,EAAA,gBAAgB;QACnC,IAAI,IAAI,CAAC,gBAAgB,EAAE;YACxB,IAAI,QAAQ;gBAAE,IAAI,CAAC,gBAAgB,CAAC,KAAK,GAAG,CAAC,CAAC;iBACzC;gBACF,IAAI,CAAC,gBAAgB,CAAC,cAAc,EAAE,CAAC;gBACvC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;aAChE;SACH;QACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,EAAE,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;IAC/B,CAAC;IAED,WAAW,EAAX,UAAY,QAAiB;QAA7B,iBA8BC;QA7BE,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,EAAE;YAC7B,kDAAkD;YAClD,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,eAAe,CAAC,QAAQ,CAAC;gBAAE,OAAO;YAEnD,oBAAoB;YACpB,IAAI,EAAE,CAAC,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC;gBAAE,OAAO;YAElD,uCAAuC;YACvC,IAAI,QAAQ,IAAI,KAAI,CAAC,gBAAgB;gBAAE,OAAO,KAAI,CAAC,qBAAqB,EAAE,CAAC;YAE3E,IAAM,0BAA0B,GAAG,EAAE,CAAC,YAAY,CAAC,sBAAsB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC7F,EAAE,CAAC,YAAY,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAExE,qBAAqB;YACrB,IAAI,CAAC,KAAI,CAAC,gBAAgB,EAAE;gBACzB,KAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;gBACjC,EAAE,CAAC,SAAS,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;gBAEvC,QAAQ,CAAC,cAAc,EAAE,CAAC;gBAC1B,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;aACtD;YAED,mBAAmB;iBACd;gBACF,IAAM,SAAS,GAAG,KAAI,CAAC,gBAAgB,CAAC;gBACxC,KAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;gBACjC,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;aAClD;QACJ,CAAC,CAAC,CAAC;IACN,CAAC;CAEH,CAAA","file":"","sourceRoot":"/","sourcesContent":["import * as _G from '../system/all_modules';\nconst { _, $ } = _G;\n\nexport const control = {\n   selectedCellNode: null as cc.Node,\n\n   init() {\n   },\n\n   clearSelectedCellNode(isNoAnim = false) {\n      if (this.selectedCellNode) {\n         if (isNoAnim) this.selectedCellNode.scale = 1;\n         else {\n            this.selectedCellNode.stopAllActions();\n            cc.tween(this.selectedCellNode).to(0.2, { scale: 1 }).start();\n         }\n      }\n      this.selectedCellNode = null;\n      _G.gameMechanic.clearHint();\n   },\n\n   bindCellTap(cellNode: cc.Node) {\n      _G.utilsUI.makeButton(cellNode, () => {\n         // if showing tut, allow to click only 2 cellNodes\n         if (!_G.tutorial.isClickableCell(cellNode)) return;\n\n         // is corrected cell\n         if (_G.gameMechanic.isFixedCell(cellNode)) return;\n\n         // click same cell again to diselect it\n         if (cellNode == this.selectedCellNode) return this.clearSelectedCellNode();\n\n         const isCellBeingHintHighlighted = _G.gameMechanic.currentHintCellNodeArr.includes(cellNode);\n         _G.gameMechanic.clearHint(isCellBeingHintHighlighted ? cellNode : null);\n\n         // first cell of pair\n         if (!this.selectedCellNode) {\n            this.selectedCellNode = cellNode;\n            _G.mapVisual.bringCellsToTop(cellNode);\n\n            cellNode.stopAllActions();\n            cc.tween(cellNode).to(0.2, { scale: 1.15 }).start();\n         }\n\n         // 2nd cell of pair\n         else {\n            const cellNode2 = this.selectedCellNode;\n            this.clearSelectedCellNode(true);\n            _G.gameMechanic.onSwapCell(cellNode, cellNode2);\n         }\n      });\n   },\n\n}"]}